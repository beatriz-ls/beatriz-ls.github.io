[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "Mapas de Calor no R\n\n\n\n\n\n\n\n\n\n\n\n26 de jun. de 2025\n\n\nBeatriz Lima Silveira\n\n\n\n\n\n\n\n\n\n\n\n\nComo eu criei meu website usando Quarto\n\n\n\n\n\n\n\n\n\n\n\n4 de ago. de 2024\n\n\nBeatriz Lima Silveira\n\n\n\n\n\n\nNenhum item correspondente"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Sobre Mim",
    "section": "",
    "text": "Como estudante de Estatística na Universidade Federal do Espírito Santo, desenvolvi habilidades sólidas em manipulação, modelagem e interpretação de dados em diversos domínios. Atualmente, estou focada na visualização de dados de saúde materno fetal como parte do meu trabalho no Observatório Obstétrico Brasileiro desenvolvido pelo Daslab. Participo da comissão organizadora da 69ª Reunião Anual da Região Brasileira da Sociedade Internacional de Biometria (RBras) e do 21º Simpósio de Estatística Aplicada à Experimentação Agronômica (SEAGRO) que ocorrerá na Universidade Federal do Espirito Santo, em Vitória, de 4 a 8 de agosto de 2025. Estou ativamente envolvida com o grupo R-Ladies Vix, que promove a diversidade de gênero na comunidade R.\nSou naturalmente curiosa e acredito que meu constante desejo de entender o mundo ao meu redor foi o que me atraiu para essa profissão.\nAlém de estudar teorias estatísticas e modelagem, também estou aprendendo HTML e CSS para aprimorar a qualidade estética dos meus relatórios interativos e painéis de visualização.\nPara saber mais sobre os projetos nos quais estou envolvida, visite os seguintes sites de laboratórios/organizações:"
  },
  {
    "objectID": "about.html#ciência-de-dados-e-eu",
    "href": "about.html#ciência-de-dados-e-eu",
    "title": "Sobre Mim",
    "section": "",
    "text": "Como estudante de Estatística na Universidade Federal do Espírito Santo, desenvolvi habilidades sólidas em manipulação, modelagem e interpretação de dados em diversos domínios. Atualmente, estou focada na visualização de dados de saúde materno fetal como parte do meu trabalho no Observatório Obstétrico Brasileiro desenvolvido pelo Daslab. Participo da comissão organizadora da 69ª Reunião Anual da Região Brasileira da Sociedade Internacional de Biometria (RBras) e do 21º Simpósio de Estatística Aplicada à Experimentação Agronômica (SEAGRO) que ocorrerá na Universidade Federal do Espirito Santo, em Vitória, de 4 a 8 de agosto de 2025. Estou ativamente envolvida com o grupo R-Ladies Vix, que promove a diversidade de gênero na comunidade R.\nSou naturalmente curiosa e acredito que meu constante desejo de entender o mundo ao meu redor foi o que me atraiu para essa profissão.\nAlém de estudar teorias estatísticas e modelagem, também estou aprendendo HTML e CSS para aprimorar a qualidade estética dos meus relatórios interativos e painéis de visualização.\nPara saber mais sobre os projetos nos quais estou envolvida, visite os seguintes sites de laboratórios/organizações:"
  },
  {
    "objectID": "about.html#ferramentas",
    "href": "about.html#ferramentas",
    "title": "Sobre Mim",
    "section": " Ferramentas",
    "text": "Ferramentas"
  },
  {
    "objectID": "about.html#áreas-de-conhecimento",
    "href": "about.html#áreas-de-conhecimento",
    "title": "Sobre Mim",
    "section": " Áreas de conhecimento",
    "text": "Áreas de conhecimento\n\n\n\nInferência Estatística\nAnálise Exploratória de Dados (EDA)\nAnálise Multivariada\nTeste de Hipóteses\nEstatística Não Paramétrica\nAnálise de Regressão\nAnálise de Sobrevivência\nModelos Lineares Generalizados\nPlanejamento de Experimentos\nAnálise de Séries Temporais\nInferência Bayesiana\n\n\n\n\nProbablidade\nÁlgebra Linear\nCálculo\nPesquisa Operacional\nProcessos Estocásticos\nAlgoritmos de busca bioinspirados\nMétodos de Amostragem"
  },
  {
    "objectID": "about.html#idiomas",
    "href": "about.html#idiomas",
    "title": "Sobre Mim",
    "section": " Idiomas",
    "text": "Idiomas\n Português - nativo\n Inglês - fluente\n Espanhol - básico\n Libras - básico"
  },
  {
    "objectID": "about.html#meus-hobbies",
    "href": "about.html#meus-hobbies",
    "title": "Sobre Mim",
    "section": " Meus hobbies",
    "text": "Meus hobbies\nNo meu (pouco e cada vez mais raro) tempo livre da vida acadêmica e científica, você me encontrará lendo um livro ou fazendo crochê de amigurumis. Tenho a sorte de viver em uma cidade costeira com belas paisagens e praias, onde gosto de sair com amigos e família. Nos finais de semana, gosto andar de patins pela praia para clarear a mente."
  },
  {
    "objectID": "blog_posts/quarto_website_tutorial/index.html",
    "href": "blog_posts/quarto_website_tutorial/index.html",
    "title": "Como eu criei meu website usando Quarto",
    "section": "",
    "text": "Há um tempo, pensava em criar um website para publicar meus projetos e ideias. Como usuária de R, utilizar o Quarto pareceu a melhor ideia devido à usabilidade desta ferramenta para publicações e renderizações. Além de outras características desejáveis, como a existência de suporte para CSS ou SCSS, a disponibilidade de templates agradáveis e de fácil manipulação, e também a compatibilidade com outras linguagens, como Python (que já programo) e Julia (que espero aprender um dia).\nDito isso, havia algumas características que eu queria que meu website tivesse, como: (1) uma estética agradável e layout intuitivo, (2) suporte multilíngue com um botão para as línguas que falo e estudo, e (3) modo escuro. Também havia algumas características que eu precisava que meu website tivesse, como: (1) uma aba para portfólio, (2) um blog com índice organizado, e (3) acesso às minhas redes sociais e ao currículo vitae. Assim, neste blog tutorial, irei explicar como fiz cada etapa e que ferramentas utilizei."
  },
  {
    "objectID": "blog_posts/quarto_website_tutorial/index.html#introdução",
    "href": "blog_posts/quarto_website_tutorial/index.html#introdução",
    "title": "Como eu criei meu website usando Quarto",
    "section": "",
    "text": "Há um tempo, pensava em criar um website para publicar meus projetos e ideias. Como usuária de R, utilizar o Quarto pareceu a melhor ideia devido à usabilidade desta ferramenta para publicações e renderizações. Além de outras características desejáveis, como a existência de suporte para CSS ou SCSS, a disponibilidade de templates agradáveis e de fácil manipulação, e também a compatibilidade com outras linguagens, como Python (que já programo) e Julia (que espero aprender um dia).\nDito isso, havia algumas características que eu queria que meu website tivesse, como: (1) uma estética agradável e layout intuitivo, (2) suporte multilíngue com um botão para as línguas que falo e estudo, e (3) modo escuro. Também havia algumas características que eu precisava que meu website tivesse, como: (1) uma aba para portfólio, (2) um blog com índice organizado, e (3) acesso às minhas redes sociais e ao currículo vitae. Assim, neste blog tutorial, irei explicar como fiz cada etapa e que ferramentas utilizei."
  },
  {
    "objectID": "blog_posts/quarto_website_tutorial/index.html#porque-o-quarto",
    "href": "blog_posts/quarto_website_tutorial/index.html#porque-o-quarto",
    "title": "Como eu criei meu website usando Quarto",
    "section": " Porque o Quarto?",
    "text": "Porque o Quarto?\nHá várias ferramentas baseadas no R que podem ser usados para constriur websites, como {blogdown} e {distill}, entretando escolhi Quarto por sua versatilidade e fácil customização.\nO {blogdown} foi uma das primeiras opções para criação de blog e se baseia no Hugo, um gerador de sites estáticos que oferece uma grande variedade de temas prontos. O {distill} surgiu como uma alternativa com foco acadêmico. Ele produz páginas com visual limpo, ideal para publicações científicas, apresentações de projetos ou relatórios técnicos. Há menos opções de personalização e o projeto não está mais em desenvolvimento ativo.\n\n\n\n\n\n\n\n\n\n\nFerramenta\nIdeal para\nSuporte a múltiplas linguagens\nPersonalização\nFacilidade de uso\n\n\n\n\nblogdown\nBlogs técnicos com Hugo\nSomente R\nAlta\nMédia\n\n\ndistill\nPublicações científicas simples\nSomente R\nBaixa\nAlta\n\n\nQuarto\nSites, blogs, livros e slides\nR, Python, Julia, Observable\nAlta\nAlta"
  },
  {
    "objectID": "blog_posts/quarto_website_tutorial/index.html#passo-1-configurações",
    "href": "blog_posts/quarto_website_tutorial/index.html#passo-1-configurações",
    "title": "Como eu criei meu website usando Quarto",
    "section": " Passo 1: Configurações",
    "text": "Passo 1: Configurações\n\n\n\n\n\n\nConfigurações prévias\n\n\n\n\nR e RStudio\nInstale o R (CRAN) e o RStudio (RStudio Download).\nQuarto\nA partir da versão 2022.07.1 do RStudio, o Quarto já vem incluído.\nCaso contrário, baixe manualmente aqui: quarto.org/docs/get-started\nGit e GitHub\nInstale o Git em git-scm.com e configure-o no terminal.\n\n\n\nNo geral, o primeiro passos para criar um blog não é complexo devido ao guia longo e detalhado que foi criado pelo time que desenvolveu o Quarto.\n\n\n\nGuia do Quarto\n\n\nApós baixar (ou atualizar) o quarto no seu computador, eu sugiro ler em detalhes o guia e também olhar exemplos de blogs/portfolios criados por outras pessoas com o quarto. Eis alguns que indico:\n\nO site da Sam Shanny-Csik\nO site da Beatriz Milz\nO site da Danielle Navarro"
  },
  {
    "objectID": "blog_posts/quarto_website_tutorial/index.html#passo-2-criando-um-novo-projeto-de-blog-no-rstudio",
    "href": "blog_posts/quarto_website_tutorial/index.html#passo-2-criando-um-novo-projeto-de-blog-no-rstudio",
    "title": "Como eu criei meu website usando Quarto",
    "section": " Passo 2: Criando um novo projeto de blog no RStudio",
    "text": "Passo 2: Criando um novo projeto de blog no RStudio\nAbra o RStudio e siga o caminho abaixo:\n\nVá em File &gt; New Project…\n\n\n\nSelecione New Directory\n\n\n\nDepois clique em Quarto Blog\n\n\n\nNomeando e salvando seu blog\nAgora, preencha os seguintes campos:\nDirectory name: o nome da sua pasta (ex: meu-blog)\nCreate project as subdirectory of: escolha onde deseja salvar o projeto no seu computador\nVocê também pode marcar a opção Open in new session para abrir o projeto em uma nova aba do RStudio.\nClique em Create Project.\n\n\nEstrutura inicial do Projeto\nAssim que você criar o projeto, verá uma estrutura de arquivos semelhante a esta:\nmeu-blog/\n├── _quarto.yml\n├── index.qmd\n├── about.qmd\n├── posts/\n│   └── welcome/\n│       └── index.qmd\n└── styles.css\n\n_quarto.yml: arquivo de configuração geral do site\nindex.qmd: página inicial do blog\nabout.qmd: sua página “sobre”\nposts/: pasta com suas postagens (uma subpasta para cada post)\nstyles.css: folha de estilo personalizada (cores, fontes, etc.) :::\n\nApós essa etapa, clique em qualquer arquivo .qmd, como o index.qmd, e depois clique no botão Render no canto superior direito do editor para renderizar o arquivo."
  },
  {
    "objectID": "blog_posts/quarto_website_tutorial/index.html#passo-3-manipulando-a-estrutura-do-_quarto.yml",
    "href": "blog_posts/quarto_website_tutorial/index.html#passo-3-manipulando-a-estrutura-do-_quarto.yml",
    "title": "Como eu criei meu website usando Quarto",
    "section": " Passo 3: Manipulando a estrutura do _quarto.yml",
    "text": "Passo 3: Manipulando a estrutura do _quarto.yml\nNesta etapa, você aprenderá a alterar o título do site, mudar o tema, editar o menu de navegação e configurar os estilos visuais com CSS.\n\nArquitetura do projeto\nUm site em Quarto segue esta estrutura fundamental:\n\narquivos.qmd: Cada página do site (como index.qmd, about.qmd)\n\\_quarto.yml: Arquivo principal de configuração\nPasta \\_site: Gerada automaticamente durante a renderização\nRecursos estáticos: Imagens, CSS e JS (normalmente em public/ ou images/)\n\n\n\nA importância do _quarto.yml\nO arquivo _quarto.yml é o coração da configuração do seu site. Ele controla todas as configurações globais do seu site. Pense nele como o “painel de controle” central.\nUm exemplo de formato de yaml:\n\n\n_quarto.yml\n\nproject:\n  type: website  # Define que é um projeto de website\n\nwebsite:\n  # Configurações gerais do site\n  title: \"Título do Site\"\n  navbar:        # Menu de navegação\n    left/right:  # Itens alinhados à esquerda/direita\n    ...\n\nformat:\n  html:\n    theme: ...   # Aparência visual\n    css: ...     # Personalizações CSS\n\n\n\n\n\n\n\nIndentação para o YAML\n\n\n\nA indentação no YAML é feita com espaços, não com tabulação. Um erro de espaço pode causar problemas na renderização. Se aparecer uma mensagem de erro do tipo “unexpected indent” ou “mapping values are not allowed here”, verifique os espaços e a formatação do seu \\_quarto.yml.\n\n\nInicialmente, é necessário definir o tipo de projeto como um website na aba de type no project. Na aba navbar é onde se define o menu superior do site. Você pode adicionar links à esquerda (left) ou direita (right). Pode incluir ícones, arquivos .qmd, ou links externos.\n\n\n\n\n\n\nOrganização do Navbar\n\n\n\nEstruture seu menu pensando na jornada do usuário, comumente em sites é utilizado o formato:\n\nEsquerda: Links principais (sobre, blog, portfólio)\nDireita: Ações secundárias (redes sociais, contato, documentos)\n\n\n\nCada item no menu que referencia um arquivo .qmd (como about.qmd) corresponde a uma página que deve existir no seu projeto. O Quarto automaticamente converte esses arquivos para HTML, mantém a navegação sincronizada e aplica o tema e estilos definidos.\nOs arquivos .qmd definidos nos “file” dentro dos navbar são as páginas para cada aba definida, sendo então cada página gerada por um arquivo qmd diferente.\nPara meu site, decidi estruturar meu site com quatro páginas principais: uma página inicial (index.qmd) utilizando um template de about page do Quarto como base, uma seção “Sobre Mim” (about.qmd) para compartilhar minhas experiências e objetivos profissionais, uma página de “Portfólio” dedicada aos meus projetos de programação e análise estatística, e uma seção “Blog” (blog.qmd) para publicar tutorais, reflexões e ideias. A página inicial foi desenvolvida a partir dos templates disponíveis na documentação do Quarto neste link.\nNo fim,a seção de website do meu arquivo qmd ficou assim:\n\n\n_quarto.yml\n\nwebsite:\n  title: \"Beatriz Lima\"\n  favicon: images/lemon_icon.png\n  navbar:\n    title: \"Beatriz Lima\"\n    logo: images/lemon_icon.png\n    #logo-alt: \"Beatriz Lima\"\n    left:\n      - icon: github\n        href: # link para meu github\n      - icon: linkedin\n        href: # link para meu linkedn\n      - icon: envelope\n        href: # link para meu email\n    right: \n      - about.qmd\n      - portfolio.qmd\n      - blog.qmd\n      - text: CV\n        menu:\n          - text: English\n            href: # meu curriculo em ingles\n          - text: Português\n            href: # meu curriculo em português\n  page-footer: \n    background: light\n    left: Website build with [Quarto](https://quarto.org/){target=_blank}\n    right: Copyright 2024, Beatriz Lima\n    \nformat:\n  html:\n    theme: bea_theme.scss\n    mainfont: Courier Prime\n    fontawesome: true\n\nDetalhes de como eu construi a seção de tema e escolhas pessoais de estética como fonte e elemento visuais estará mais explicado na seção sobre customização.\n\n\n\n\n\n\nChecklist pós-configuração\n\n\n\n\n\n\nTodos os arquivos .qmd referenciados no navbar existem?\nOs links externos (GitHub, LinkedIn, etc.) estão corretos?\nA indentação YAML usa espaços (não tabs)?\nCada item do menu tem text ou icon + href/file?"
  },
  {
    "objectID": "blog_posts/quarto_website_tutorial/index.html#passo-4-publique-seu-site-com-o-github-pages",
    "href": "blog_posts/quarto_website_tutorial/index.html#passo-4-publique-seu-site-com-o-github-pages",
    "title": "Como eu criei meu website usando Quarto",
    "section": " Passo 4: Publique seu site com o Github Pages",
    "text": "Passo 4: Publique seu site com o Github Pages\nDeploy (implantação) é o processo de disponibilizar seu site local na internet. Para realizar esse processo com algum projeto do quarto, isso envolve: (1) Renderizar o documento .qmd para HTML, (2) Hospedar os arquivos em um servidos acessível e (3) publicar esse material.\nExiste diversas formas de publicar sites atualmente, após de ter estudado diversas possibilidades acabei decidindo pelo método mais simples e rápido.\n\n\n\n\n\n\nNetlify: Uma alternativa para Github Pages\n\n\n\n\n\nQuando considerar o Netlify?\nUm dos diferenciais em relação ao Pages é o sistema de pré-visualizações para cada Pull Request, que permite revisar as mudanças em um ambiente isolado antes de mesclá-las à produção. Para projetos que demandam funcionalidades dinâmicas, o Netlify oferece integração nativa com funções serverless, permitindo a criação de APIs simples e processamento de formulários sem a necessidade de configurar um backend complexo.\nVantagens principais:\n\nDeploy contínuo: Integração nativa com GitHub/GitLab\nPreviews de PR: Visualize mudanças antes de mergear\nServerless functions: Execute código backend sem servidor\nForms handling: Colete dados de formulários sem backend\nRedirects/rewrites: Configuração via _redirects simples\n\n\n\n\n\nConfigurando um repositório\nDa mesma forma que foi criado um projeto no seu computador, é necessário criar um repositório na sua conta do github para hospedar o seu futuro site. Primeiro, acesse sua conta no GitHub e clique em “New repository”.\nNomeie o repositório e, se quiser que o site seja acessado diretamente em https://&lt;seu-usuario&gt;.github.io, utilize exatamente este formato como nome do repositório: &lt;seu-usuario&gt;.github.io\n\n\n\n\n\n\nExemplo\n\n\n\nSe seu nome de usuário no GitHub for beatriz-ls, o nome do repositório deve ser beatriz-ls.github.io.\n\n\nCaso use outro nome, o site ficará disponível em: https://&lt;seu-usuario&gt;.github.io/&lt;nome-do-repositorio&gt;\nEm seguida:\n\nMarque a opção “Public” para tornar o repositório público.\nVocê pode adicionar um README para incluir informações sobre o site.\nClique em “Create repository”.\n\nAssim, o repositório remoto a próxima estapa é passar o seu projeto quarto para esse repositório.\n\n\nInicializando o repositório local e conectando ao GitHub\nNo seu computador, dentro da pasta do projeto do site que você criou com o Quarto, abra o terminal (ou use o terminal do RStudio) e execute os seguintes comandos para iniciar o Git e conectar ao seu repositório no GitHub:\n# Inicialize o repositório Git local\ngit init\n\n# Adicione todos os arquivos ao controle de versão\ngit add .\n\n# Faça o primeiro commit com uma mensagem descritiva\ngit commit -m \"Primeiro commit do site Quarto\"\nDepois, conecte seu projeto local ao repositório remoto que você acabou de criar no GitHub:\n# Substitua &lt;seu-usuario&gt; e &lt;nome-do-repositorio&gt; conforme o seu caso\ngit remote add origin https://github.com/&lt;seu-usuario&gt;/&lt;nome-do-repositorio&gt;.git\nPor fim, envie os arquivos para o GitHub:\ngit branch -M main  # Garante que a branch principal se chame \"main\"\ngit push -u origin main\n\n\nRealizando o Deploy\nO GitHub Pages espera que os arquivos do site estejam dentro de uma pasta chamada docs/ no seu repositório, devido a configurações padrões. Por padrão, o Quarto cria uma pasta chamada _site/, mas podemos mudar isso facilmente no arquivo _quarto.yml.\nAbra o arquivo _quarto.yml do seu projeto e adicione (ou ajuste) a seguinte configuração:\n\n\n_quarto.yml\n\nproject:\n  type: website\n  output-dir: docs  # GitHub Pages usa esta pasta para exibir o site\n\nCom isso, toda vez que você rodar o comando quarto render, os arquivos HTML do site serão gerados dentro da pasta docs/, que o GitHub Pages reconhecerá automaticamente para exibição.\n\n\n\n\n\n\nAtenção\n\n\n\nNão apague ou edite manualmente a pasta docs/. Ela será atualizada automaticamente sempre que você renderizar o site com quarto render.\n\n\nAgora que os arquivos do site já estão no GitHub, falta apenas ativar o GitHub Pages:\n\nAcesse o seu repositório no GitHub.\nClique em Settings (canto superior direito).\nNo menu lateral, vá até Pages.\nEm Build and deployment, configure:\n\nSource: Deploy from a branch\nBranch: main\nFolder: /docs\n\nClique em Save.\n\nApós essa etapa, vai iniciar o processo de deploy."
  },
  {
    "objectID": "blog_posts/quarto_website_tutorial/index.html#passo-4-customização-com-scss",
    "href": "blog_posts/quarto_website_tutorial/index.html#passo-4-customização-com-scss",
    "title": "Como eu criei meu website usando Quarto",
    "section": " Passo 4: Customização com SCSS",
    "text": "Passo 4: Customização com SCSS\nO Quarto utiliza o framework Bootstrap para definir o visual e o layout dos sites criados.\n\n\n\n\n\n\nO que é um framework?\n\n\n\n\n\nUm framework é como uma estrutura pronta ou uma caixa de ferramentas que te ajuda a construir algo de forma mais rápida e organizada. Ele oferece componentes, regras e padrões que você pode seguir — economizando tempo e evitando que você tenha que fazer tudo do zero.\nO Bootstrap é um framework de front-end. Ele te dá uma base pronta com estilos modernos e responsivos para construir seu site — sem precisar escrever todo o CSS do zero.\n\n\n\nBootstrap é um dos frameworks front-end popular e que fornece uma base sólida de componentes (como botões, menus, navegação, tabelas, alertas e muito mais) com design responsivos. Visto que o Quarto usa o Bootstrap, é possivel realizar modificações na estética utilizando Bootswach - um projeto que oferece variações de temas visuais para o Bootstrap. Os temas disponíveis estão aqui. Para incluir os temas no seu projeto, modifique o arquivo -quarto.yml na seção de format.\n\n\n_quarto.yml\n\nformat:\n  html:\n    theme: cosmo\n\nDito isso, para a estética do website, é possivel utilizar um dos temas, fazer modificações com css que subrescrevendo algumas áreas do tema, ou, criar um tema completamente novo com css.\nNeste website, foi utilizado um tema completamente novo utilizando scss.\n\nO que é SCSS?\n\n\n\nLogo do Sassy CSS\n\n\nO SCSS (Sassy CSS) é uma sintaxe do pré-processador Sass, que compila para CSS padrão. Ele funciona como uma camada extra de organização sobre o CSS tradicional, permitindo que você escreva códigos de forma mais reutilizável e escalável.\nAlgumas das principais diferenciais da utilização do SCSS:\n\nCriação de variáveis: É possivel criar variáveis para cores, fontes, espaçamentos etc.\n\n\n\ntheme.scss\n\n$cor-principal: #5b84e7;\nbody {\n  background-color: $cor-principal;\n}\n\n\nOperações e lógica simples: como cálculos com unidades (ex: width: 100% / 3;) ou uso de condicionais.\nModularização: você pode dividir seu código em vários arquivos menores e depois juntá-los automaticamente, o que facilita a organização.\n\nDesta forma, escolhi utilizar o SCSS por achar que iria facilitar a minha escrita do código, como uma pessoal que ainda está aprendendo a passos lentos a mexer com CSS e HTML.\nNeste tutorial não irei explicar em detalher como programar com SCSS, mas afirmo que o guia bem feito pelo próprios criadores do Sass foi suficiente para as customizações do meu website especificamente.\n\n\n\nGuia do Sass\n\n\n\n\nDicas para criar uma estética com SCSS\nAs necessidades mais importantes são :\n\nUma paletta de cores: Selecione três ou quatro cores que se complementam. Você pode buscar inspiração no Coolors ou no Pinterest;\nFontes: Escolha uma fonte para os títulos e outra para o corpo do texto, o Google Fonts é uma ferramenta útil para escolher fontes;\nElementos visuais (ícones, imagens, símbolos): Como ícones e simbolos.\n\n\nDica 1: Fontes com Google Fonts\nPara importar uma fonte do Google Fonts é só copiar o link de importação do site e incluir no arquivo .scss.\n\n\ntheme.scss\n\n@import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@400;700&display=swap');\n\nDepois definir a fonte nas seções desejadas:\n\n\ntheme.scss\n\nbody {\n  font-family: 'Quicksand', sans-serif;\n}\n\nh1, h2, h3 {\n  font-family: 'Quicksand', sans-serif;\n  font-weight: 700;\n}\n\n\n\nDica 2: Ícones com FontAwesome\nAdicionar ícones ao seu site pode deixá-lo mais visual, dinâmico e informativo. O FontAwesome é uma extensão de fácil download que pode ser utilizado para fezer um site ter mais a sua cara.\nO Quarto oferece uma extensão oficial para FontAwesome. Para instalar, basta rodar o seguinte comando no terminal (ou console do RStudio):\nquarto install extension quarto-ext/fontawesome\nEsse comando irá adicionar uma pasta chamada \\_extensions ao seu projeto, contendo os arquivos necessários para utilizar o FontAwesome.\nDepois de instalada a extensão, você pode utilizar os ícones diretamente nos seus arquivos .qmd, de forma bem simples, usando a sintaxe .\nA lista completa de ícones disponíveis pode ser vista em: Aqui"
  },
  {
    "objectID": "blog_posts/quarto_website_tutorial/index.html#passo-extra-website-multilingual",
    "href": "blog_posts/quarto_website_tutorial/index.html#passo-extra-website-multilingual",
    "title": "Como eu criei meu website usando Quarto",
    "section": " Passo Extra: Website Multilingual",
    "text": "Passo Extra: Website Multilingual\n\n\n\nLogo do {babelquarto}\n\n\nEu tinha o interesse de criar um site que tivesse um botão com capacidade de mudar a lingua, devido ao quarto não possuir suporte para isso, utilizei um pacote chamado {babelquarto} criado por Maëlle Salmon e Pascal Burkhard que serve justamente para esse objetivo. Ele automatiza a gestão de páginas traduzidas, adiciona botões para alternar de idioma e ajuda a manter o conteúdo sincronizado entre as versões.\nQuando comecei a trabalhar no meu site, o {babelquarto} tinha sido lançado a pouco tempo e tinha pouca bibliográfia na internet de como utilizar, então aprender o funcionamento foi realmente um desafio. Entretanto, para a sorte daqueles que estão seguindo esse tutorial, Joel Nitta, um contribuidor desse pacote, escreveu um tutorial em inglês mais detalhado de como utilizar esse pacote poucos meses depois de eu ter aplicado no meu site.\nPenso em talvez escrever uma postagem sobre minha experiência utilizando esse pacote, mas ainda para um futuro mais distante."
  },
  {
    "objectID": "blog_posts/quarto_website_tutorial/index.html#considerações-finais",
    "href": "blog_posts/quarto_website_tutorial/index.html#considerações-finais",
    "title": "Como eu criei meu website usando Quarto",
    "section": " Considerações finais",
    "text": "Considerações finais\nNeste post, detalhei os métodos que utilizei para construir meu próprio website e compartilhei as principais fontes e inspirações que me ajudaram a aprender as ferramentas. Apesar de ter sido bastante detalhista, confesso que optei por simplificar alguns tópicos na postagem — como na seção de deploy, em que apresentei um método mais direto em vez de explicar como utilizei o GitHub Actions para automatização. Pretendo escrever um post separado sobre esse tema, que é mais complexo e merece uma atenção especial. Espero que este post funcione não só como um guia, mas também como um incentivo para que você crie seu próprio site, do seu jeito, com as ferramentas que fizerem mais sentido para você."
  },
  {
    "objectID": "portfolio_projects/painel-vigilancia-materna-perinatal/index.html",
    "href": "portfolio_projects/painel-vigilancia-materna-perinatal/index.html",
    "title": "Painel de Vigilância da Saúde Materna e Perinatal",
    "section": "",
    "text": "Acesse o painel aqui"
  },
  {
    "objectID": "portfolio_projects/painel-vigilancia-materna-perinatal/index.html#descrição",
    "href": "portfolio_projects/painel-vigilancia-materna-perinatal/index.html#descrição",
    "title": "Painel de Vigilância da Saúde Materna e Perinatal",
    "section": "Descrição",
    "text": "Descrição\nA morte materna – morte de uma mulher durante a gestação, parto ou até 42 dias após o término da gestação – não é um evento isolado. Ela é o resultado de uma série de determinantes sociais em saúde que atuam durante a vida de uma mulher. Da mesma forma, desfechos perinatais dependem da saúde materna e da assistência à mulher durante o pré-natal e o parto, além da adequada assistência ao bebê após o nascimento.\nNeste painel, você encontrará um conjunto de indicadores que expressam a vulnerabilidade das mulheres ao óbito materno, seja por suas condições socioeconômicas, por sua raça/cor ou pela atenção à saúde recebida ao longo da sua vida reprodutiva. Encontrará também indicadores relacionados aos desfechos perinatais, determinados em grande parte pela atenção de saúde durante a gestação e o parto.\nOs indicadores estão disponíveis para municípios, estados, regiões de saúde e país e foram calculados a partir de vários sistemas de informação brasileiros (SINASC, SIM, SINAN, SIH, SIAB, ANS e estimativas populacionais). O painel contém indicadores a partir do ano 2012 e será atualizado anualmente. Para anos com as bases ainda não finalizadas pelo Ministério da Saúde, esses dados estarão identificados como “preliminares”.\nOs indicadores têm fácil visualização e podem ser explorados pelos gestores de saúde para identificar áreas prioritárias para investimento em seu município/estado. Para auxiliar na interpretação dos indicadores, são apresentados valores de referência, que podem ser metas nacionais ou internacionais, recomendações da Organização Mundial da Saúde, valores observados em países desenvolvidos ou a média nacional.\nO painel está organizado em três níveis:\n\nResumo dos blocos de indicadores: nesse nível, são mostrados todos os indicadores, de todos os blocos, em uma única tela, para o ano e região geográfica selecionados. Um relatório com o resumo dos indicadores está disponível para impressão;\nSéries históricas: nesse nível, é mostrada a evolução dos indicadores de cada bloco para a localidade e período de tempo selecionados, sendo possível a comparação entre localidades, situando o município/estado/região no cenário nacional;\nVisão detalhada dos indicadores: nesse nível, cada indicador pode ser visualizado individualmente e comparado a outras localidades. Deve-se primeiro selecionar o bloco ao qual o indicador pertence e depois o indicador escolhido. Além das visualizações, a documentação de cada indicador é apresentada de forma resumida: sua definição, a fonte dos dados, o método de cálculo e informações sobre a qualidade da informação são apresentados.\n\nAlém disso, também estão disponíveis:\n\nDocumentação dos indicadores: nesse menu, disponibilizamos um documento para impressão, contendo a documentação completa de todos os indicadores do painel;\nA história da Aparecida: nesse menu, disponibilizamos um link para a “História de Aparecida”, onde mostramos os indicadores apresentados neste painel em diferentes contextos e em como eles refletem as situações de vulnerabilidade da mulher ao óbito materno, permitindo maior conhecimento sobre a morte materna e seus determinantes."
  },
  {
    "objectID": "portfolio_projects/painel-vigilancia-materna-perinatal/index.html#desenvolvimento",
    "href": "portfolio_projects/painel-vigilancia-materna-perinatal/index.html#desenvolvimento",
    "title": "Painel de Vigilância da Saúde Materna e Perinatal",
    "section": "Desenvolvimento",
    "text": "Desenvolvimento\nEste painel foi desenvolvido utilizando ferramentas de análise e visualização de dados, garantindo acessibilidade e interatividade para diferentes perfis de usuários, principalmente gestores e profissionais da saúde.\nA plataforma foi construída com a linguagem R, utilizando o pacote Shiny, que permite a criação de aplicações web dinâmicas e responsivas, facilitando a exploração e análise dos dados em tempo real. Para a manipulação, limpeza e análise dos dados, foram aplicadas bibliotecas do {tidyverse}, tais como {dplyr} e {tidyr}.\nO projeto contou com a colaboração de uma equipe de acadêmicos do Observatório Obstétrico Brasileiro. Destacam-se as contribuições de:\n\nAgatha Sacramento Rodrigues – Coordenação\nRafael Sant’Ana, Esley Caminhas, Samuel Meideiros, Mariana Costa, Pedro Brito – Desenvolvimento de interface, visualização de dados, revisão e validação dos indicadores\n\nAlém disso, o projeto foi realizado em parceria com órgãos públicos e instituições de referência na área de saúde pública, incluindo:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA integração dos dados utilizados no painel foi possível graças à disponibilização pública dos sistemas de informação nacionais (SINASC, SIM, SINAN, SIH, SIAB, ANS), complementados por estimativas populacionais oficiais.\nO painel é mantido e atualizado pela equipe do Observatório Obstétrico, com atualizações anuais para incorporar os dados mais recentes e aprimorar a experiência do usuário, visando sempre contribuir para a melhoria das políticas públicas voltadas à saúde materna e perinatal no Brasil."
  },
  {
    "objectID": "blog_posts/heatmap_tutorial/index.html",
    "href": "blog_posts/heatmap_tutorial/index.html",
    "title": "Mapas de Calor no R",
    "section": "",
    "text": "Dentro do contexto da análise de dados, a necessidade de criar elementos visuais para representar e/ou resumir informações presentes em conjunto de dados culminou na criação de diversos tipos de representações gráficas, entre elas o mapa de calor. De forma geral, um mapa de calor utiliza um gradiente de cores para representar quantificadamente uma determinada matriz. No R, há diversas maneiras de criar mapas de calor, e cada método ou pacote oferece diferentes funcionalidades e estilos, entretanto antes do avanço da computação já havia registros da utilização desse método de visualização de dados. No contexto histórico, um dos exemplos de utilização mais antigos é datado em 1873, quando Toussaint Loua - um estatístico francês - usou matriz desenhadas a mão e coloridas para a visualização das estatísticas de indicadores sociais dos distritos de Paris 1. Neste tutorial, será explicado em que contexto optar por utilizar um mapa de calor, qual a natureza os dados devem ter, além de comparar três abordagens populares para a criação de mapas de calor no R: a função heatmap do pacote {stats}, o pacote {ggplot2} e o pacote {pheatmap}. A prática será realizada com os dados do Observatório Obstétrico Brasileiro, mais especificamente os dados desenvolvidos para o painel Qualidados que avalia um parâmetro denominado inconsistência. Um dado é considerado inconsistente se há informações que parecem ilógicas e/ou incompatíveis a partir da análise da combinação dos dados informados em dois ou mais campos do formulário. Esse indicador é utilizado no Qualidados para avaliar três bancos de dados, o Sistema de Vigilância Epidemiológica da Gripe (SIVEP), o Sistema Nacional de Nascidos Vivos (SINASC) e o Sistema de Informações sobre Mortalidade (SIM), entretando neste tutorial focaremos em avaliar inconsistências no SIVEP."
  },
  {
    "objectID": "blog_posts/heatmap_tutorial/index.html#introdução",
    "href": "blog_posts/heatmap_tutorial/index.html#introdução",
    "title": "Mapas de Calor no R",
    "section": "",
    "text": "Dentro do contexto da análise de dados, a necessidade de criar elementos visuais para representar e/ou resumir informações presentes em conjunto de dados culminou na criação de diversos tipos de representações gráficas, entre elas o mapa de calor. De forma geral, um mapa de calor utiliza um gradiente de cores para representar quantificadamente uma determinada matriz. No R, há diversas maneiras de criar mapas de calor, e cada método ou pacote oferece diferentes funcionalidades e estilos, entretanto antes do avanço da computação já havia registros da utilização desse método de visualização de dados. No contexto histórico, um dos exemplos de utilização mais antigos é datado em 1873, quando Toussaint Loua - um estatístico francês - usou matriz desenhadas a mão e coloridas para a visualização das estatísticas de indicadores sociais dos distritos de Paris 1. Neste tutorial, será explicado em que contexto optar por utilizar um mapa de calor, qual a natureza os dados devem ter, além de comparar três abordagens populares para a criação de mapas de calor no R: a função heatmap do pacote {stats}, o pacote {ggplot2} e o pacote {pheatmap}. A prática será realizada com os dados do Observatório Obstétrico Brasileiro, mais especificamente os dados desenvolvidos para o painel Qualidados que avalia um parâmetro denominado inconsistência. Um dado é considerado inconsistente se há informações que parecem ilógicas e/ou incompatíveis a partir da análise da combinação dos dados informados em dois ou mais campos do formulário. Esse indicador é utilizado no Qualidados para avaliar três bancos de dados, o Sistema de Vigilância Epidemiológica da Gripe (SIVEP), o Sistema Nacional de Nascidos Vivos (SINASC) e o Sistema de Informações sobre Mortalidade (SIM), entretando neste tutorial focaremos em avaliar inconsistências no SIVEP."
  },
  {
    "objectID": "blog_posts/heatmap_tutorial/index.html#quando-utilizar-mapas-de-calor",
    "href": "blog_posts/heatmap_tutorial/index.html#quando-utilizar-mapas-de-calor",
    "title": "Mapas de Calor no R",
    "section": "Quando utilizar mapas de calor?",
    "text": "Quando utilizar mapas de calor?\nO mapa de calor é um recurso gráfico muito usado. Mas quando ele é a melhor escolha?\n\nDados numéricos em matriz\nMapas de calor funcionam melhor quando os dados estão organizados em uma estrutura tabular, entretanto nem sempre os dados vão ser disponibilizados neste formato específico. Ao receber um banco de dados, muitas vezes haverá variáveis com natureza categórica e/ou numérica. Quando lidamos com dados numéricos organizados em formato matricial, como indicadores econômicos, taxas de mortalidade ou correlações entre variáveis, o mapa de calor permite visualizar padrões de forma direta ao avaliar a intensidade da cor.\n\n\nCruzamento entre variáveis categóricas\nEm muitos casos, temos duas variáveis categóricas e queremos observar como as categorias de uma variável se comportam em relação à outra. Por exemplo, ao cruzar os tipos de inconsistência (VARIAVEL) com as unidades da federação (ESTADO), o mapa de calor permite visualizar quais categorias se destacam — seja pela quantidade, pela frequência ou pela proporção de inconsistências.\nNeste cenário, o valor numérico que preenche a célula da matriz (por exemplo, a proporção de inconsistências) é que orienta a variação da cor.\n\n\nDados mistos: categóricos e numéricos\nMuitos bancos de dados contêm tanto variáveis categóricas quanto variáveis numéricas.\nNesses casos, o mapa de calor é útil para:\n\nComparar grupos diferentes de forma visual e rápida;\nIdentificar quais subgrupos têm valores mais altos ou mais baixos;\nRevelar padrões ou diferenças sutis que podem passar despercebidas em tabelas comuns.\n\n\n\nDados com estruturas não ordenadas\nDiferente dos gráficos de linha, o mapa de calor não exige uma ordenação natural dos eixos. Mesmo quando as variáveis são categorias nominais sem hierarquia (como nomes de estados ou tipos de erro), a variação de cor permite identificar padrões de forma eficiente. Isso torna o mapa de calor especialmente útil quando lidamos com combinações de variáveis categóricas associadas a valores numéricos.\nEntretanto, mapas de calor ainda podem e são costumeiramente utilizados em contextos com ordenação, como por exemplos para visualização de clusters hierarquicos, onde os eixos são reorganizados para refletirem a semelhança entre observações. Dito isso, neste tutorial não será abordado visualização de cluster hierárquicos."
  },
  {
    "objectID": "blog_posts/heatmap_tutorial/index.html#pré-processamento-dos-dados",
    "href": "blog_posts/heatmap_tutorial/index.html#pré-processamento-dos-dados",
    "title": "Mapas de Calor no R",
    "section": "Pré-processamento dos dados",
    "text": "Pré-processamento dos dados\nOs dados do Observatório Obstétrico Brasileiro estão disponíveis no Synapse, uma plataforma utilizada como suporte para colaborações científicas focadas em open source e disponibilização de dados da área da saúde.\nIniciaremos baixando o banco de dados que será chamado de “dados”.\n\nload(\"data/dados_oobr_qualidados_SIVEP_Inconsistencia_2009_2023.rda\")\n\ndados &lt;- dados_oobr_qualidados_SIVEP_Inconsistencia_2009_2023\n\nOs dados foram disponibilizados em formato .rda - um formato de dados nativo do R -, para baixar os dados é só utilizar a função load() e renomear. Algumas das funções que iremos abordar só aceitam entrada de dados em formato matricial, então é necessário converter os dados utilizando `as.matrix(). Para isso, é necessário avaliar o formato em que os dados foram disponibilizados e manipular estrutura de acordo com a necessidade.\n\nhead(dados)\n\n                MUNICIPIO ESTADO          VARIAVEL  ANO INCONSISTENTES TOTAIS\n1           CURITIBA - PR     PR SEXO e IDADE_GEST 2020              0    237\n2           TERESINA - PI     PI SEXO e IDADE_GEST 2020              0    303\n3          SAO PAULO - SP     SP SEXO e IDADE_GEST 2020              0   1496\n4          GUARULHOS - SP     SP SEXO e IDADE_GEST 2020              0    155\n5 SAO CAETANO DO SUL - SP     SP SEXO e IDADE_GEST 2020              0     11\n6             SOBRAL - CE     CE SEXO e IDADE_GEST 2020              0    232\n\n\nObserva-se que os dados estão em formato agregado (também chamados de dados sumarizados), pois cada linha não representa um indivíduo, mas sim uma unidade geográfica (município) em um ano específico, com um resumo estatístico (número total de registros e inconsistências) para uma determinada variável. As colunas estão descritas:\n\nMUNICIPIO: nome do município, acompanhado da sigla da unidade federativa;\nESTADO: sigla da unidade federativa (UF);\nVARIAVEL: dados preenchidos no questionário do SIVEP-Gripe que apresentam inconsistência entre si (ex.: “SEXO e IDADE_GEST” indica uma inconsistencia lógica da informação preenchida entre as variáveis SEXO e IDADE GESTACIONAL).\nANO: ano de referência dos dados;\nINCONSISTENTES: número de registros considerados inconsistentes para aquela variável naquele município e ano;\nTOTAIS: número total de registros (somando inconsistentes e válidos) para a combinação de município, variável e ano.\n\nSe temos como objetivo construir um mapa de calor da porcentagem de inconsistências por estado para cada variáveis é necessário fazer umas modificações no banco de dado para transformar os dados em inputs aceitáveis paras as funções que plotam os gráficos.\nNo caso destes dados, iniciamos criando uma variável nos dados chamada “porcentagem_inconsistências” com base nas variáveis “TOTAL” e “INCONSISTENTES” utilizando o pacote {dplyr} para fazer a manipulação.\n\nlibrary(dplyr)\nlibrary(tidyr)\n\n# Filtrando e calculando a porcentagem de inconsistências\ndataset_aux &lt;- dados %&gt;%\n  filter(ANO == 2023) %&gt;%\n  group_by(VARIAVEL, ESTADO) %&gt;%\n  summarise(PORCENTAGEM_INCONSISTENTES = sum(INCONSISTENTES) / sum(TOTAIS), .groups = \"drop\")\n\nhead(dataset_aux)\n\n# A tibble: 6 × 3\n  VARIAVEL          ESTADO PORCENTAGEM_INCONSISTENTES\n  &lt;fct&gt;             &lt;chr&gt;                       &lt;dbl&gt;\n1 SEXO e IDADE_GEST AC                         0     \n2 SEXO e IDADE_GEST AL                         0     \n3 SEXO e IDADE_GEST AM                         0     \n4 SEXO e IDADE_GEST AP                         0     \n5 SEXO e IDADE_GEST BA                         0     \n6 SEXO e IDADE_GEST CE                         0.0143\n\n\nNeste código, foi criado um novo objeto chamado dataset_aux a partir do objeto original dados, utilizando %&gt;% para encadear os seguintes comandos:\n\nfilter(ANO == 2023): filtra o conjunto de dados para manter apenas as linhas referentes ao ano de 2023;\ngroup_by(VARIVEL, ESTADO): agrupa os dados pelas variáveis VARIAVEL e ESTADO. Isso permite que o cálculo posterior seja feito para cada combinação dessas categorias;\nsummarise(PORCENTAGEM_INCONSISTENTES = sum(INCONSISTENTES) / sum(TOTAIS), .groups = \"drop\"): dentro de cada grupo definido acima, calcula a porcentagem de inconsistências, ou seja, o total de registros inconsistentes dividido pelo total geral de registros. O argumento .groups = \"drop\" serve para remover o agrupamento após o resumo, retornando um data.frame não agrupado.\n\nDepois de criar a data.frame que será o valor da matriz do nosso mapa de calor, é necessário transformar o objeto dataset.aux em uma matriz.\n\n# Transformando para formato largo\nmatriz_dados &lt;- dataset_aux %&gt;%\n  pivot_wider(names_from = ESTADO, values_from = PORCENTAGEM_INCONSISTENTES) %&gt;%\n  as.data.frame()\n\nrownames(matriz_dados) &lt;- matriz_dados$VARIAVEL\n\nmatriz_dados &lt;- as.matrix(matriz_dados[ , -1])\n\nUsa-se os pacotes {dplyr} e {tidyr} para transformar os dados de formato longo para formato largo.\nA função `pivot_wider() do pacote {tidyr} reorganiza os dados para que cada valor único da coluna ESTADO se torne uma nova coluna, preenchida com os valores correspondentes de PORCENTAGEM_INCONSISTENTES.\nApós isso, definimos a coluna VARIAVEL como o nome das linhas da matriz, e usamos as.matrix() para converter o data.frame resultante em uma matriz numérica adequada para as funções de mapa de calor.\n\nFormatos de organização de dados\nHá dois formatos de organização de dados comumente encontrados, eles são ditos formato longo e formato largo. Dados que estão no formato longo são organizados de forma que cada linha representa uma única observação e as variáveis de interesse são empilhadas em colunas. O formato largo organiza os dados de modo que cada ID ou entidade seja colocada em uma coluna distinta que representa uma variável específica. Diferentemente do formato largo, onde cada variável tem sua própria coluna, no formato longo, múltiplas observações para a mesma variável são empilhadas em uma única coluna, com outras colunas identificando a unidade.\nDentro do contexto do pré processamento de dados que foi realizado, os dados foram disponibilizados em formato longo, que é aceito pelo pacote ggplot, e manipulados para o formato largo para converter em matriz e ser utilizado nas funções heatmap() e pheatmap()."
  },
  {
    "objectID": "blog_posts/heatmap_tutorial/index.html#mapas-de-calor-com-base",
    "href": "blog_posts/heatmap_tutorial/index.html#mapas-de-calor-com-base",
    "title": "Mapas de Calor no R",
    "section": "Mapas de Calor com {base}",
    "text": "Mapas de Calor com {base}\nPara a construção de mapas de calor de forma simples, o R possui uma função nativa no pacote {stats} chamada heatmap(). Essa função exige dados em formato de matriz, como o objeto matriz_dados utilizado abaixo:\n\nheatmap(matriz_dados,\n        Rowv = NA,\n        Colv = NA,\n        col = viridis::viridis(100),\n        scale = \"none\",\n        xlab = \"Estado\",\n        ylab = \"\",\n        main = \"Inconsistências no SIVEP-Gripe em 2022 (stats)\"\n)\n\n\n\n\n\n\n\n\nOs parâmetros Rowv = NA e Colv = NA definem se as colunas e linhas devem ser reordenadas, definindo NA, a ordenação automática é desativada. A paleta de cores, definida por col, varia de rosa a vermelho escuro usando colorRampPalette(). Os dados são apresentados sem qualquer escala (scale = \"none\"), preservando seus valores originais. Os rótulos do eixo e títulos são definidos pelo xlab, ylab e main.\nApesar de ser uma escolha simples e direta, a personificação da função heatmap é limitada, tornando menos eficiente quando necessário lidar com banco de dados que exigem um maior nível de customização."
  },
  {
    "objectID": "blog_posts/heatmap_tutorial/index.html#mapas-de-calor-com-pheatmap",
    "href": "blog_posts/heatmap_tutorial/index.html#mapas-de-calor-com-pheatmap",
    "title": "Mapas de Calor no R",
    "section": "Mapas de Calor com {pheatmap}",
    "text": "Mapas de Calor com {pheatmap}\nEm contrasrte, iremos construir um mapa de calor usando o o pacote {pheatmap}. Este pacote foi projetado especificamente para criar mapas de calor, oferecendo múltiplas opções de personalização. No entanto, para utilização é mais complexo que o pacote heatmap e, comparadado com ggplot(), é menos flexível em termos de integração com outros elementos gráficos.\n\nlibrary(pheatmap)# chamando biblioteca\n\npheatmap(matriz_dados,\n         cluster_rows = FALSE,\n         cluster_cols = FALSE,\n         color = viridis::viridis(100),\n         fontsize = 8,\n         main =  \"Inconsistências no SIVEP-Gripe em 2022 (pheatmap)\"\n)\n\n\n\n\n\n\n\n\nEsta função também só aceita como input os dados em formato de matriz, por isso utilizaremos o matriz_dados. Aqui, cluster_rows = FALSE e cluster_cols = FALSE indicam que não deve haver agrupamento (clustering) automático das linhas ou colunas. O paramêtro color especifica a paleta de cores. fontsize = 8 ajusta o tamanho da fonte utilizada nos textos e main() define o título."
  },
  {
    "objectID": "blog_posts/heatmap_tutorial/index.html#mapas-de-calor-com-ggplot2",
    "href": "blog_posts/heatmap_tutorial/index.html#mapas-de-calor-com-ggplot2",
    "title": "Mapas de Calor no R",
    "section": "Mapas de Calor com {ggplot2}",
    "text": "Mapas de Calor com {ggplot2}\nO ggplot() oferece uma grande flexibilidade para personalização gráfica e aceita dados em formato longo. Por isso, utilizaremos o dataset_aux.\n\nlibrary(ggplot2) # chamando biblioteca\n\nggplot(dataset_aux, aes(x = ESTADO, y = VARIAVEL, fill = PORCENTAGEM_INCONSISTENTES)) +\n  geom_tile() +\n  scale_fill_viridis_c(\n    name = \"Porcentagem\",\n    labels = scales::percent,\n    option = \"D\"\n  ) +\n  theme_minimal() +\n  labs(title = \"Inconsistências no SIVEP-Gripe em 2022 (ggplot)\")\n\n\n\n\n\n\n\n\nNeste código, aes() define as variáveis do eixo x e do eixo y. scale_fill_viridis_c() ajusta a escala de cores do preenchimento das células do mapa de calor, utilizando a paleta perceptualmente uniforme da função viridis. O argumento option = “D” especifica a variação da paleta utilizada. O argumento name define o rótulo da legenda de cores como “Porcentagem” e labels formata os valores na legenda como percentuais usando a função scales::percent. theme_minimal() define o tema do gráfico como minimalista. labs() define o título do gráfico.\nggplot() embora ofereça uma gama mais ampla de opções, não será de fácil utilização para pessoas que não tenham conhecimento prévio sobre a ferramenta. Dito isso, é interessante aprender ggplot2, pois é uma ferramenta que permite criar variados tipos de gráficos. No OObr, o aluno Pedro Brito apresentou um minicurso de ggplot2 em um workshop de Ciência de Dados, disponível neste link."
  },
  {
    "objectID": "blog_posts/heatmap_tutorial/index.html#conclusão",
    "href": "blog_posts/heatmap_tutorial/index.html#conclusão",
    "title": "Mapas de Calor no R",
    "section": "Conclusão",
    "text": "Conclusão\nPor fim, neste tutorial, após apontar a utilidade e origem do mapa de calor como um recurso gráfico, também foi apontado diversos métodos de construção de mapas de calor utilizando a ferramenta R. Desta forma, percebe-se que a escolha entre essas opções depende das necessidades específicas do projeto, da familiaridade com cada função e do nível de personalização desejado."
  },
  {
    "objectID": "blog_posts/heatmap_tutorial/index.html#referências",
    "href": "blog_posts/heatmap_tutorial/index.html#referências",
    "title": "Mapas de Calor no R",
    "section": "Referências",
    "text": "Referências\n[1] Wilkinson L, Friendly M (maio de 2009). «The History of the Cluster Heat Map». The American Statistician. 63 (2): 179–184. CiteSeerX 10.1.1.165.7924 Acessível livremente. doi:10.1198/tas.2009.0033"
  },
  {
    "objectID": "portfolio.html",
    "href": "portfolio.html",
    "title": "Portfólio",
    "section": "",
    "text": "Painel de Vigilância da Saúde Materna e Perinatal\n\n\nEste painel apresenta indicadores sobre mortalidade materna e desfechos perinatais, destacando desigualdades sociais, raciais e de acesso à saúde. Os dados, provenientes de diversos sistemas nacionais, estão disponíveis desde 2012 para municípios, estados e regiões. A plataforma permite análises comparativas, séries históricas e acesso à documentação completa dos indicadores criados.\n\n\n\ndashboard\n\n\npainel\n\n\nshiny\n\n\nR\n\n\nSaúde\n\n\n\n\nBeatriz Lima Silveira et al\n\n\n30 de jun. de 2025\n\n\n\n\n\n\n\n\nNenhum item correspondente"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Beatriz Lima",
    "section": "",
    "text": "Bem vindo ao meu website! Eu sou Beatriz Lima , futura estatística e ciêntista de dados, atualmente cursando na Universidade Federal do Espirito Santo. Neste site você encontrará meu portfólio de projetos, bem como meu blog sobre assuntos da área."
  }
]